import React from 'react';
import { Link, Redirect } from 'react-router-dom';
//will import track index item
class TrackForm extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      title: '',
      description: '',
      uploader_id: this.props.currentUser.id,
      imageFile: null,
      imageUrl: null,
      audioFile: null,
      audioUrl: null
    }
    this.handleSubmit = this.handleSubmit.bind(this);
    this.updateImageFile = this.updateImageFile.bind(this);
    this.updateAudioFile = this.updateAudioFile.bind(this);
    this.updateFile = this.updateFile.bind(this);
  }

  generalDetailForm() {
    return (
    <div className="detail-submit">
      <label className='inputLabel'>Upload Image
        <input className="h-input" type="file" onChange={this.updateImageFile}/>
      </label>
      <input type="text" onChange={this.update('title')}/>
      <input type="text" onChange={this.update('description')}/>
      <input className="track-submit" type="submit" value='Upload Track' />
    </div>);
  }

  update(type) {
    return e => this.setState({ [type]: e.currentTarget.value })
  }

  updateFile(type, e) {
    const typeFile = type.concat('File');
    const typeUrl = type.concat('Url');
    const file = e.currentTarget.files[0];
    const fileReader = new FileReader();

    fileReader.onloadend = () => {
      return this.setState({ [typeFile]: file, [typeUrl]: fileReader.result });
    }

    if (file) {
      fileReader.readAsDataURL(file);
    } else {
      this.setState({ [typeUrl]: 'didnt work', [typeFile]: null })
    }

  }

  updateImageFile(e) {
    const file = e.currentTarget.files[0];
    const fileReader = new FileReader();
    fileReader.onloadend = () => {
      return this.setState({ imageFile: file, imageUrl: fileReader.result });
    }

    if (file) {
      fileReader.readAsDataURL(file);
    } else {
      this.setState({ imageUrl: 'didnt work', imageFile: null })
    }

  }

  updateAudioFile(e) {
    const file = e.currentTarget.files[0];
    const fileReader = new FileReader();
    fileReader.onloadend = () => {
      return this.setState({ audioFile: file, audioUrl: fileReader.result });
    }

    if (file) {
      fileReader.readAsDataURL(file);
    } else {
      this.setState({ audioUrl: 'didnt work', audioFile: null })
    }

  }

  handleSubmit(e) {
    e.preventDefault();
    const formData = new FormData();
    formData.append("track[title]", this.state.title);
    formData.append("track[description]", this.state.description);
    if (this.state.imageFile) formData.append("track[image]", this.state.imageFile);
    if (this.state.audioFile) formData.append("track[audio]", this.state.audioFile);
    this.props.createTrack(formData).then(() => this.props.history.push('/'));
}

  render(){

  let detailSubmit;
  let upload_container;
  let uploadvar;
  if (this.state.audioFile === null)
  {upload_container = 'audio-upload-container';
    detailSubmit = '';
    uploadvar = 'audio';
  }else{
    upload_container = 'audio-upload-container auc-special';
    detailSubmit = this.generalDetailForm();
    uploadvar = 'image';
  }

    return (
      <div className='track-form-container'>
        <form onSubmit={this.handleSubmit} className='track-form'>
          <div className={upload_container}>
            <h1>Upload to VIBESKY</h1>
            <label className='inputLabel il-main'>Choose a file to upload
              <input className="h-input" type="file" onChange={(e) => this.updateFile(uploadvar, e)}/>
            </label>
          </div>
          {detailSubmit}
        </form>
      </div>
    )
  }
}

export default TrackForm;
